{"version":3,"sources":["BackgroundAnimation.js","cardData.js","App.js","reportWebVitals.js","index.js"],"names":["createBoxWithRoundedEdges","width","height","depth","radius0","smoothness","shape","THREE","eps","radius","absarc","Math","PI","geometry","amount","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","curveSegments","center","cardData","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","deltaY","touchRotate","touchScroll","container","camera","scene","renderer","parsedCardData","targetRotationX","targetRotationY","mouseX","mouseXOnMouseDown","mouseY","mouseYOnMouseDown","windowHalfX","innerWidth","windowHalfY","innerHeight","stars","cardHolder","focusButtonHolder","focusHolder","galleryHolder","cameraMinPositionY","white","red","offWhite","whiteGrey","cardMaxCoordinateX","cardMinCoordinateX","cardLongSide","cardShortSide","cardThinkness","cardSpacingStandardWidth","cardSpacingExtraWidth","cardSpacingWideCardWidth","cardRowHeight","titleRowHeight","titleRowHeightBetweenNames","titlePositionX","titleSize","document","createElement","body","appendChild","screenWidth","documentElement","clientWidth","console","warn","background","position","z","add","setSize","Interaction","buttonWidth","buttonFront","color","buttonMaterials","buttonGeometry","backButton","x","y","marginLeft","marginTop","push","cursor","on","ev","switchToGalleryViewFromFocus","load","font","textGeometry","size","buttonTextSize","sides","materials","initializeFocusButtons","rawData","sortedData","i","length","cardName","cardParts","split","name","serial_parts","serial_number","substring","serial_total","fighter_img_name","toLowerCase","replace","imgBack","imgFront","sideways","displayPositionY","keys","Object","sort","idx","fighter","substr","indexOf","rows","rowPositionX","maxSeries","max","apply","series","serial","parseCardData","front","text","outlineColor","outlineMaterials","outlineText","scale","set","cardPositionY","cardPositionX","mint","loader","map","back","card","focusViewCard","img_back","img_front","rotation","switchToFocusView","this","enableScrolling","domElement","addEventListener","onDocumentMouseDown","init","material","sphere","random","addSphere","animate","time","TWEEN","rotateAroundWorldAxis","render","star","animateStars","viewChangeDistance","targetPosition","copy","to","easing","Quadratic","InOut","start","imgLoader","focusCardMaterials","focusCardShortSide","focusCardLongSide","focusCardGeometry","focusCard","type","removeEventListener","onDocumentMouseDownXY","buttonTargetPosition","onMouseWheel","touchScrollStart","touchScrollMove","touchScrollEnd","onFocusTouchStart","focusElements","concat","slice","event","newScroll","newRotate","preventDefault","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseOut","clientX","log","clientY","onDocumentMouseMoveXY","onDocumentMouseUpXY","onDocumentMouseOutXY","onFocusTouchMoveRotateCard","onFocusTouchEnd","onFocusTouchCancel","touches","screenX","screenY","weight","object","axis","radians","rotationMatrix","makeRotationAxis","normalize","multiply","matrix","setFromRotationMatrix","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src","getElementById"],"mappings":"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","file":"static/js/main.7a6cb456.chunk.js","sourcesContent":["/**\n * This module exports functions for the background animation\n **/\n\nimport * as THREE from \"three\";\n\n\nexport function addSphere(scene, stars) {\n\n  // The loop will move from z position of -1000 to z position 1000, adding a random particle at each position. \n  for ( var z= -1000; z < 1000; z+=20 ) {\n  \n    // Make a sphere (exactly the same as before). \n    var geometry   = new THREE.SphereGeometry(0.5, 32, 32)\n    var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n    var sphere = new THREE.Mesh(geometry, material)\n  \n    // This time we give the sphere random x and y positions between -500 and 500\n    sphere.position.x = Math.random() * 1000 - 500;\n    sphere.position.y = Math.random() * 1000 - 500;\n  \n    // Then set the z position to where it is in the loop (distance of camera)\n    sphere.position.z = z;\n  \n    // scale it up a bit\n    sphere.scale.x = sphere.scale.y = 2;\n  \n    //add the sphere to the scene\n    scene.add( sphere );\n  \n    //finally push it to the stars array \n    stars.push(sphere); \n  }\n}\n\nexport function animateStars(stars) {\n        \n  // loop through each star\n  for(var i=0; i<stars.length; i++) {\n    \n    var star = stars[i]; \n      \n    // and move it forward dependent on the mouseY position. \n    star.position.z +=  i/10;\n      \n    // if the particle is too close move it to the back\n    if(star.position.z>1000) star.position.z-=2000; \n    \n  }\n}\n\n/*\n * Taken from:\n *     https://discourse.threejs.org/t/round-edged-box/1402\n */\nexport function createBoxWithRoundedEdges( width, height, depth, radius0, smoothness ) {\n  let shape = new THREE.Shape();\n  let eps = 0.00001;\n  let radius = radius0 - eps;\n  shape.absarc( eps, eps, eps, -Math.PI / 2, -Math.PI, true );\n  shape.absarc( eps, height -  radius * 2, eps, Math.PI, Math.PI / 2, true );\n  shape.absarc( width - radius * 2, height -  radius * 2, eps, Math.PI / 2, 0, true );\n  shape.absarc( width - radius * 2, eps, eps, 0, -Math.PI / 2, true );\n  let geometry = new THREE.ExtrudeBufferGeometry( shape, {\n    amount: depth - radius0 * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius,\n    bevelThickness: radius0,\n    curveSegments: smoothness\n  });\n  \n  geometry.center();\n  \n  return geometry;\n}\n","/**\n * some text here\n * */\n\nexport const cardData = [\n    //{\n    //    \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [102/199]\",\n    //    \"img_front\": \"https://assets.paniniamerica.net/catalog/product/pack/23/217A_67561_0003F3_BC2202Oct_BC_1_102_199.png\",\n    //    \"img_front\": \"https://assets.paniniamerica.net/catalog/product/pack/850003/Master/217B_67561_0003F3_BC2202Oct_BC.png\",\n    //     \n    //\n    //    Access to image at 'https://assets.paniniamerica.net/catalog/product/pack/850003/Master/217A_67561_0003F3_BC2202Oct_BC_1_102_199.png' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\n    //\n    //\n    //},\n    //{\n    //    \"card\": \"\",\n    //},\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #51 - Stephen Thompson - [696/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #51 - Stephen Thompson - [92/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse Tie-Dye #51 - Stephen Thompson - [31/49]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [730/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [53/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [81/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Tie-Dye #220 - Chan Sung Jung - [42/49]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Tie-Dye #217 - Stephen Thompson - [30/49]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [244/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [300/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [504/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [176/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #40 - Conor McGregor - [898/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [757/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [619/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #40 - Conor McGregor - [712/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #209 - Dominick Cruz - [142/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #220 - Chan Sung Jung - [73/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [102/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #18 - Brock Lesnar - [246/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #18 - Brock Lesnar - [525/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [568/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #18 - Brock Lesnar - [978/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [129/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [523/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [861/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Tie-Dye #217 - Stephen Thompson - [19/49]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [96/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Tie-Dye #236 - Anthony Smith - [20/49]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [507/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #40 - Conor McGregor - [331/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse Tie-Dye #19 - Michael Chiesa - [24/49]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [533/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [144/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Gold #217 - Stephen Thompson - [10/10]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [142/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [716/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [805/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #243 - Georges St-Pierre - [49/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [74/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Gold #217 - Stephen Thompson - [7/10]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [614/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [200/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [129/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [114/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [930/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [117/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [74/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse Gold #91 - Tony Ferguson - [9/10]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [61/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Gold #209 - Dominick Cruz - [8/10]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #47 - Khabib Nurmagomedov - [119/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [154/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [168/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #220 - Chan Sung Jung - [112/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside Gold #217 - Stephen Thompson - [9/10]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [645/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #220 - Chan Sung Jung - [196/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [947/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [397/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [527/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [258/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [25/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [104/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #249 - Derek Brunson - [185/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #51 - Stephen Thompson - [179/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [917/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #9 - Michael Chandler - [886/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [654/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [510/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Premier Level #156 - Arnold Allen - [304/599]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #48 - Carla Esparza - [18/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Global Icons #16 - Robert Whittaker - [216/250]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #30 - Colby Covington - [263/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Global Icons #17 - Amanda Nunes - [97/250]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #30 - Colby Covington - [390/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Premier Level #154 - Anthony Smith - [448/599]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #58 - Chan Sung Jung - [204/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Global Icons #21 - Jan Blachowicz - [57/250]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #220 - Chan Sung Jung - [98/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #220 - Chan Sung Jung - [126/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #61 - Stipe Miocic - [229/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Octagonside #217 - Stephen Thompson - [142/199]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #14 - Georges St-Pierre - [440/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #58 - Chan Sung Jung - [29/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #19 - Michael Chiesa - [102/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Concourse #27 - Kelvin Gastelum - [785/999]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Premier Level #119 - Diego Ferreira - [558/599]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Global Icons #14 - Jair Rozenstruik - [98/250]\",\n    },\n    {\n        \"card\": \"2021 Panini Blockchain UFC Packs Entertainment - BC 2021 Select- Base Premier Level #123 - Tyron Woodley - [499/599]\",\n    },\n];\n\nexport const nickNameMapping = {\n    //\n    \"Amanda Nunes\": \"The Lioness\",\n    \"Anthony Smith\": \"Lionheart\",\n    \"Arnold Allen\": \"Almighty\",\n    \"Carla Esparza\": \"Cookie Monster\",\n    \"Chan Sung Jung\": \"The Korean Zombie\",\n    \"Colby Covington\": \"Chaos\",\n    \"Conor McGregor\": \"The Notorious\",\n    \"Derek Brunson\": \"The 1\",\n    \"Diego Ferreira\": \"\",\n    \"Dominick Cruz\": \"The Dominator\",\n    \"Georges St-Pierre\": \"Rush\",\n    \"Jair Rozenstruik\": \"Bigi Boy\",\n    \"Jan Blachowicz\": \"\",\n    \"Kelvin Gastelum\": \"\",\n    \"Khabib Nurmagomedov\": \"The Eagle\",\n    \"Michael Chandler\": \"Iron\",\n    \"Michael Chiesa\": \"Maverick\",\n    \"Robert Whittaker\": \"The Reaper\",\n    \"Stephen Thompson\": \"Wonderboy\",\n    \"Stipe Miocic\": \"\",\n    \"Tony Ferguson\": \"El Cucuy\",\n    \"Tyron Woodley\": \"The Chosen One\",\n}","import './App.css';\nimport { addSphere, animateStars, createBoxWithRoundedEdges } from './BackgroundAnimation';\nimport { cardData, nickNameMapping } from './cardData';\n\nimport Stats from 'stats-js';\nimport { Interaction } from 'three.interaction';\nimport * as THREE from \"three\";\nimport * as TWEEN from \"@tweenjs/tween.js\";\n\n/**\n * Provides requestAnimationFrame in a cross browser way.\n * @author paulirish / http://paulirish.com/\n */\n\nif (!window.requestAnimationFrame) {\n\n  window.requestAnimationFrame = (function() {\n\n    return window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\n\n        window.setTimeout(callback, 1000 / 60);\n\n      };\n\n  })();\n\n}\n\n//var layoutPositionX = -5;\n//var layoutPositionY = 5;\n\nvar targetRotationX = Math.PI / 2;\nvar targetRotationOnMouseDownX = 0;\n\nvar targetRotationY = 0;\nvar targetRotationOnMouseDownY = 0;\n\nvar mouseX = 0;\nvar mouseXOnMouseDown = 0;\n\nvar mouseY = 0;\nvar mouseYOnMouseDown = 0;\n\nvar windowHalfX = window.innerWidth / 2;\nvar windowHalfY = window.innerHeight / 2;\n\nvar deltaX\nvar deltaY;\nvar touchRotate;\nvar touchScroll;\n\nvar slowingFactor = 1.0;\n\nvar familyButtonPositionY;\n\n// ----\nvar container, stats;\nvar camera, scene, renderer, stars=[];\n\nvar card;\nvar cardHolder = [];\nvar familyButtonHolder = [];\nvar familyHolder = [];\nvar focusButtonHolder = [];\nvar focusHolder = [];\nvar galleryHolder = [];\n\nvar cameraMinPositionY = 0;\n\nvar parsedCardData;\n\nconst cameraMaxPositionY = 0;\nconst cameraPositionZ = 6;\n\nconst startingPagePositionY = 0;\n\nconst familyButtonHeight = 0.5;\nconst familyButtonPaddingY = 1;\n\n// Is this used?\nconst buttonTextPositionZ = 0.3;\n\nconst backbuttonPositionZ = 4.5;\nconst backbuttonTextPositionZ = 4.6;\n\nconst textSizeXL = 0.45;\nconst textSizeL = 0.28;\nconst textSizeM = 0.25;\n\nconst black = 0x000000;\nconst white = 0xFFFFFF;\nconst red = 0xFF0000;\nconst apricot = 0xFBCEB1;\nconst offWhite = 0xF0F0F0;\nconst whiteGrey = 0xE0E0E0;\n\n\n// Default settings for mobile view\nvar cardMaxCoordinateX = 0.8;\nvar cardMinCoordinateX = -0.7;\n\nvar cardLongSide = 1.4;\nvar cardShortSide = 1;\nvar cardThinkness = 0.003;\n\nvar cardSpacingStandardWidth = 1.15;\nvar cardSpacingExtraWidth = 0.15;\nvar cardSpacingWideCardWidth = 1.35;\n\nvar cardRowHeight = 1.65;\n\nvar titleRowHeight = 0.88;\nvar titleRowHeightBetweenNames = 0.28;\nvar titlePositionX = -1.2;\nvar titleSize = textSizeM;\n\nvar buttonTextSize = 0.2;\n\n\ninit();\naddSphere(scene, stars);\nanimate();\n\n\nfunction init() {\n  // Stats.js\n  container = document.createElement( 'div' );\n  document.body.appendChild( container );\n\n  // Determine responsive settings\n  //console.log('window: ' + window.screen.width);\n  \n  const screenWidth  = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  console.warn('screen width: ' + screenWidth);\n\n  if (screenWidth > 1148) {\n    // Large Screen\n    cardMaxCoordinateX = 2.25;\n    cardMinCoordinateX = -1.8;\n\n    cardLongSide = 1.5;\n    cardShortSide = 1;\n    cardThinkness = 0.005;\n\n    cardSpacingStandardWidth = 1.2;\n    cardSpacingExtraWidth = 0.25;\n    cardSpacingWideCardWidth = 1.45;\n\n    cardRowHeight = 1.75;\n\n    titleRowHeight = 1;\n    titleRowHeightBetweenNames = 0.5;\n    titlePositionX = -2;\n    titleSize = textSizeXL;\n\n  } else if (screenWidth > 688) {\n    // Tablet\n    cardMaxCoordinateX = 1.3;\n    cardMinCoordinateX = -0.95;\n\n    cardLongSide = 1.2;\n    cardShortSide = 0.85;\n    cardThinkness = 0.004;\n\n    cardSpacingStandardWidth = 0.95;\n    cardSpacingExtraWidth = 0.2;\n    cardSpacingWideCardWidth = 1.15;\n\n    cardRowHeight = 1.4;\n    \n    titleRowHeight = 0.8;\n    titlePositionX = -1.3;\n    titleRowHeightBetweenNames = 0.32;\n    titleSize = textSizeL;\n  }\n\n  // Scene\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0x2C3E50);\n\n  // Camera\n  camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );\n  camera.position.z = cameraPositionZ;\n  //const interaction = new three.Interaction(renderer, scene, camera);\n  //camera.position.y = -12;\n  //camera.position.z = 500;\n  scene.add( camera );\n\n  // Renderer\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n\n  var interaction = new Interaction(renderer, scene, camera);\n\n  // Init the back button in focus mode\n  initializeFocusButtons();\n\n  // Add fighter titles & cards\n  const loader = new THREE.TextureLoader();\n\n  parsedCardData = parseCardData(cardData);\n\n  var keys = Object.keys(parsedCardData);\n  keys.sort();\n\n  // Iterate through the fighter data\n  for (var i=0; i<keys.length; i++) {\n    // capture the key name\n    let fighter = keys[i]\n\n    // Load & render title text\n    var textGeometry;\n\n    // Determine text font for length of fighter name\n    //var textSize = defaultTextSize;\n    //console.log(fighter + ' __ ' + fighter.length)\n    //if (fighter.length > 14) {\n    //  textSize = 0.1;\n    //}\n\n    new THREE.FontLoader().load(\n    \"fonts/Sternbach_Italic.json\",\n    (font) => {\n      //Geometry\n      textGeometry = new THREE.TextBufferGeometry(\n        parsedCardData[fighter][\"firstName\"],  // <-- Text to display - first name\n        {\n          font: font,\n          size: titleSize,\n          height: 0.2,\n          curveSegments: 6,\n          //bevelEnabled: true,\n          //bevelThickness: 0.02,\n          //bevelSize: 0.005,\n          //bevelOffset: 0,\n          //bevelSegments: 4\n        }\n      )\n\n      //textGeometry.center()  //to center the text at the axis\n\n      // //Material - make sure you use Normal material to get that gradient color\n      // const textMaterial = new THREE.MeshNormalMaterial()\n\n      //let back = new THREE.MeshBasicMaterial({color: 0x566573, });\n      let front = new THREE.MeshBasicMaterial({color: white, });\n      let sides = new THREE.MeshBasicMaterial({color: red, });\n\n      let materials = [\n        front, sides, front, sides, sides, sides,\n      ]\n\n      const text = new THREE.Mesh(textGeometry, materials)\n\n      text.position.x = titlePositionX;\n      text.position.y = parsedCardData[fighter]['titleFirstNameY'];\n\n      // Create outline text mesh\n      const outlineColor = new THREE.MeshBasicMaterial({color: black,});\n\n      let outlineMaterials = [\n        outlineColor, outlineColor, outlineColor, outlineColor, outlineColor, outlineColor,\n      ];\n\n      const outlineText = new THREE.Mesh(textGeometry, outlineMaterials);\n\n      outlineText.position.x = titlePositionX;\n      outlineText.position.y = parsedCardData[fighter]['titleFirstNameY'];\n      outlineText.position.z = -0.015;\n\n      outlineText.scale.set(1.005, 1.01, 1.01);\n\n      // Add text & outline\n      scene.add(text);\n      scene.add(outlineText);\n\n      // Add to full gallery element collection\n      galleryHolder.push(text);\n      galleryHolder.push(outlineText);\n    });\n\n    new THREE.FontLoader().load(\n    \"fonts/Sternbach_Italic.json\",\n    (font) => {\n      //Geometry\n      textGeometry = new THREE.TextBufferGeometry(\n        parsedCardData[fighter][\"lastName\"],  // <-- Text to display - last name\n        {\n          font: font,\n          size: titleSize,\n          height: 0.2,\n          curveSegments: 6,\n          //bevelEnabled: true,\n          //bevelThickness: 0.02,\n          //bevelSize: 0.005,\n          //bevelOffset: 0,\n          //bevelSegments: 4\n        }\n      )\n\n      //textGeometry.center()  //to center the text at the axis\n\n      // //Material - make sure you use Normal material to get that gradient color\n      // const textMaterial = new THREE.MeshNormalMaterial()\n\n      //let back = new THREE.MeshBasicMaterial({color: 0x566573, });\n      let front = new THREE.MeshBasicMaterial({color: white, });\n      let sides = new THREE.MeshBasicMaterial({color: red, });\n\n      let materials = [\n        front, sides, front, sides, sides, sides,\n      ]\n\n      const text = new THREE.Mesh(textGeometry, materials)\n\n      text.position.x = titlePositionX;\n      text.position.y = parsedCardData[fighter]['titleLastNameY'];\n\n      // Create outline text mesh\n      const outlineColor = new THREE.MeshBasicMaterial({color: black,});\n\n      let outlineMaterials = [\n        outlineColor, outlineColor, outlineColor, outlineColor, outlineColor, outlineColor,\n      ];\n\n      const outlineText = new THREE.Mesh(textGeometry, outlineMaterials);\n\n      outlineText.position.x = titlePositionX;\n      outlineText.position.y = parsedCardData[fighter]['titleLastNameY'];\n      outlineText.position.z = -0.015;\n\n      outlineText.scale.set(1.005, 1.01, 1.01);\n\n      // Add text & outline\n      scene.add(text);\n      scene.add(outlineText);\n\n      // Add to full gallery element collection\n      galleryHolder.push(text);\n      galleryHolder.push(outlineText);\n    });\n\n    // Add cards to the scene\n    //const fighter_img_name = fighter.toLowerCase().replace(/ /g,\"_\");\n\n    var cardPositionY = parsedCardData[fighter]['startingCardPositionY']\n    var cardPositionX = cardMinCoordinateX;\n\n    // Iterate throught the card data\n    for (const series in parsedCardData[fighter]['cards']) {\n      //console.log(series)\n\n      for (const mint in parsedCardData[fighter]['cards'][series]) {\n        // Get this card's metadata\n        let cardMeta = parsedCardData[fighter]['cards'][series][mint]       \n\n        // Add card to the scene\n        let loader = new THREE.TextureLoader();\n\n        let front = new THREE.MeshBasicMaterial({map: loader.load(`${parsedCardData[fighter]['cards'][series][mint]['img_front']}`), });\n        let back = new THREE.MeshBasicMaterial({map: loader.load(`${parsedCardData[fighter]['cards'][series][mint]['img_back']}`), });\n        let sides = new THREE.MeshBasicMaterial({color: 0x566573, });\n\n        let materials = [\n          back, front, sides, sides, sides, sides,\n        ]\n\n        // Make accurate vertical/horizontal ratio\n        var geometry = new THREE.BoxGeometry(cardThinkness, cardLongSide, cardShortSide);\n        if (parsedCardData[fighter]['cards'][series][mint]['sideways']) {\n          geometry = new THREE.BoxGeometry(cardThinkness, cardShortSide, cardLongSide);\n        }\n\n        // Create meshes for each view on page load\n        let card = new THREE.Mesh(geometry, materials);\n        let focusViewCard = new THREE.Mesh(geometry, materials);\n\n        // Name object for filtering object by cards\n        card.name = `card_${parsedCardData[fighter]['cards'][series][mint]['formatted_name']}`;\n\n        // Set custom attributes for focus view\n        card.img_back = parsedCardData[fighter]['cards'][series][mint]['img_back'];\n        card.img_front = parsedCardData[fighter]['cards'][series][mint]['img_front'];\n        card.sideways = parsedCardData[fighter]['cards'][series][mint]['sideways'];\n\n        // If card is displayed landscape, add extra space before placing it\n        if (card.sideways) {\n          cardPositionX += cardSpacingExtraWidth;\n        }\n\n        // Set the card position\n        card.position.x = cardPositionX;\n        card.position.y = cardPositionY;\n        //card.overdraw = true;\n        card.rotation.set(new THREE.Vector3(0.5, 0.5, 0.5));\n\n        // Add card to the scene\n        scene.add(card);\n\n        // Add other card to parsedCardData for use in other view\n        parsedCardData[fighter]['cards'][series][mint]['focusViewMesh'] = focusViewCard;\n\n        // Add click event to the card\n        card.cursor = 'pointer';\n        card.on('click', function(ev) {\n          //console.log(fighter);\n\n          //\n          switchToFocusView(this);\n        });\n\n        // Increment X position for placement of next card\n        cardPositionX += cardSpacingStandardWidth;\n\n        // should be enough to accomodate width: 4 cards\n        if (cardPositionX > cardMaxCoordinateX) {\n          cardPositionY -= cardRowHeight;\n          cardPositionX = cardMinCoordinateX;\n        }\n\n        if (cardPositionY < cameraMinPositionY) {\n          cameraMinPositionY = cardPositionY;\n        }\n\n        // Add card mesh object to collection for interaction bindings later\n        cardHolder.push(card);\n\n        // Add to full gallery screen collection\n        galleryHolder.push(card);\n      }\n    }\n\n  }\n\n  /**\n   * \n   *   \"Legacy code.. this was first version of cards.. the grid\"\n   * \n   * \n  for (var i = 0; i < cardData.length; i++) {\n    //console.log(cardData[i].card_front);\n\n    let loader = new THREE.TextureLoader();\n\n    //console.warn(cardData[i].card.split('-'));\n    //console.warn(cardData[i].card.split('-')[3])\n\n    let cardParts = cardData[i].card.split(' - ');\n    let name = cardParts[2];\n    let serial = cardParts[3];\n\n    let names = name.trim().split(/-| /)\n\n    let name_abrv = \"\";\n    for (const idx in names) {\n      name_abrv += names[idx].charAt(0).toLowerCase()\n    }\n\n    let serial_parts = serial.split('/')\n    let serial_number = serial_parts[0].substring(1)\n    let serial_total = serial_parts[1].substring(0, serial_parts[1].length - 1)\n\n    let img_front = `${name_abrv}_${serial_number}_${serial_total}.png`\n    let img_back = `${name_abrv}_${serial_total}.png`\n\n    let front = new THREE.MeshBasicMaterial({map: loader.load(`joshah-moors/panini-nft-gallery/img/${img_front}`), });\n    let back = new THREE.MeshBasicMaterial({map: loader.load(`joshah-moors/panini-nft-gallery/img/${img_back}`), });\n    let sides = new THREE.MeshBasicMaterial({color: 0x566573, });\n\n    let materials = [\n      back, front, sides, sides, sides, sides,\n    ]\n\n    let geometry = new THREE.BoxGeometry(0.005, 1.5, 1);\n\n    let card = new THREE.Mesh(geometry, materials);\n\n    card.position.x = cardPositionX;\n    card.position.y = cardPositionY;\n    cardPositionY += 1.6;\n\n    if (cardPositionY > 5) {\n      cardPositionX += 1.2;\n      cardPositionY = -5;\n    }\n\n    card.rotation.set(new THREE.Vector3(0.5, 0.5, 0.5))\n\n    card.overdraw = true;\n\n    //scene.add( card );\n    cardHolder.push(card);\n  }\n  */  \n\n  enableScrolling();\n\n  //window.addEventListener( 'touchmove', onMouseWheel, false );\n\n\n  \n\n  //for (const card in cardHolder) {\n  //  card.on('click', function(event) {\n  //    console.log('ye -- logging');\n  //  });\n  //}\n\n  container.appendChild( renderer.domElement );\n\n  //// Display on-page stats graph\n  //stats = new Stats();\n  //stats.domElement.style.position = 'absolute';\n  //stats.domElement.style.top = '0px';\n  //container.appendChild( stats.domElement );\n\n  // Add event handlers for mouse & touch interactions\n  document.addEventListener( 'mousedown', onDocumentMouseDown, false );\n\n  // Add event handler for touch\n  //document.addEventListener( 'touchstart', onDocumentTouchStart, false );\n}\n\n\n\n\n\n\n/*\n * Pre-load this button because the text loader is async\n */\nfunction initializeGalleryButtons() {\n\n\n  // Refactor out\n  //\n  var buttonWidth = 1,\n      height = 0.5,\n      depth = 0.25;\n\n\n  // Create meshes\n  const buttonFront = new THREE.MeshBasicMaterial({color: offWhite, });\n  const buttonSides = new THREE.MeshBasicMaterial({color: whiteGrey, });\n  const buttonMaterials = [\n    buttonFront, buttonSides, buttonSides, buttonSides, buttonSides, buttonSides,\n  ]\n  const buttonGeometry = new createBoxWithRoundedEdges(buttonWidth, height, depth, 0.05, 1);\n\n  // Create meshes\n  const galleryButton = new THREE.Mesh(buttonGeometry, buttonMaterials);\n  const shuffleButton = new THREE.Mesh(buttonGeometry, buttonMaterials);\n\n  // Position to the left of screen\n  var familyViewButtonSpace = 1;\n\n  galleryButton.position.x = camera.position.x - 4;\n  shuffleButton.position.x = galleryButton.position.x - buttonWidth - familyViewButtonSpace;\n\n  // Position back button below the collage\n  //galleryButton.position.y = camera.position.y;\n  const collageY = 1.5;\n\n  galleryButton.position.y = shuffleButton.position.y = camera.position.y - collageY;\n\n  // Add items to the scene & container for switching views\n  scene.add(galleryButton);\n  familyButtonHolder.push(galleryButton);\n\n  scene.add(shuffleButton);\n  familyButtonHolder.push(shuffleButton);\n\n  // Add event handlers\n  galleryButton.cursor = 'pointer';\n  galleryButton.on('click', function(ev) {\n    //switchToGalleryViewFromFamily();\n  });\n\n  shuffleButton.cursor = 'pointer';\n  shuffleButton.on('click', function(ev) {\n    console.warn('a+');\n  });\n\n  // Add the \"back\" text\n  new THREE.FontLoader().load(\n    //\"fonts/helvetiker_regular.typeface.json\",\n    \"fonts/Sternbach_Italic.json\",\n    (font) => {\n      //Geometry\n      let textGeometry = new THREE.TextBufferGeometry(\n        \"Back\",  // <-- Text to display - first name\n        {\n          font: font,\n          size: buttonTextSize - 1,\n          height: 0.01,\n          curveSegments: 6,\n        }\n      )\n\n      let sides = new THREE.MeshBasicMaterial({color: black, });\n      let materials = [\n        sides, sides, sides, sides, sides, sides,\n      ]\n\n      const gbText = new THREE.Mesh(textGeometry, materials);\n\n      var textPaddingTop = 0.1;\n      var textPaddingLeft = 0.2;\n\n      gbText.position.x = camera.position.x - 5 + (buttonWidth / 2) + textPaddingLeft;\n      gbText.position.y = camera.position.y - collageY - textPaddingTop;\n      gbText.position.z = buttonTextPositionZ - 0.2;\n\n      // Add text to scene & continaer\n      scene.add(gbText);\n      familyButtonHolder.push(gbText);\n\n      // Event handler\n      gbText.cursor = 'pointer';\n      gbText.on('click', function(ev) {\n        //switchToGalleryViewFromFamily();\n      });\n    }\n  );\n\n  // Add the \"shuffle\" text\n  new THREE.FontLoader().load(\n    //\"fonts/helvetiker_regular.typeface.json\",\n    \"fonts/Sternbach_Italic.json\",\n    (font) => {\n      //Geometry\n      let textGeometry = new THREE.TextBufferGeometry(\n        \"Shuffle\",  // <-- Text to display - first name\n        {\n          font: font,\n          size: buttonTextSize,\n          height: 0.05,\n          curveSegments: 6,\n        }\n      )\n\n      let sides = new THREE.MeshBasicMaterial({color: black, });\n      let materials = [\n        sides, sides, sides, sides, sides, sides,\n      ]\n\n      const gbText = new THREE.Mesh(textGeometry, materials);\n\n      var textPaddingTop = 0.1;\n      var textPaddingLeft = 0.1;\n\n      gbText.position.x = camera.position.x - 5 - familyViewButtonSpace - (buttonWidth / 2) + textPaddingLeft;\n      gbText.position.y = camera.position.y - collageY - textPaddingTop;\n      gbText.position.z = buttonTextPositionZ;\n\n      // Add text to scene & continaer\n      scene.add(gbText);\n      familyButtonHolder.push(gbText);\n\n      // Event handler\n      gbText.cursor = 'pointer';\n      gbText.on('click', function(ev) {\n        //switchToGalleryViewFromFamily();\n\n        //\n        //   Add steps here\n\n\n      });\n    }\n  );\n\n  //// Add buttons to element container for the family photo view\n  //for (const i in familyButtonHolder) {\n  //  familyHolder.push(familyButtonHolder[i])\n  //}\n}\n\n\n\n/*\n * Pre-load this button because the text loader is async\n */\nfunction initializeFocusButtons() {\n\n\n  // Refactor out - common?\n  //\n  var buttonWidth = 0.4,\n      height = 0.15,\n      depth = 0.15;\n\n\n  // Create meshes\n  const buttonFront = new THREE.MeshBasicMaterial({color: offWhite, });\n  const buttonSides = new THREE.MeshBasicMaterial({color: whiteGrey, });\n  const buttonMaterials = [\n    //buttonFront, buttonSides, buttonSides, buttonSides, buttonSides, buttonSides,\n    buttonFront, buttonFront, buttonFront, buttonFront, buttonFront, buttonFront,\n  ]\n  const buttonGeometry = new createBoxWithRoundedEdges(buttonWidth, height, depth, 0.05, 1);\n\n  // Create meshes\n  const backButton = new THREE.Mesh(buttonGeometry, buttonMaterials);\n\n  // Position to the left of screen\n  var familyViewButtonSpace = 1;\n\n  backButton.position.x = camera.position.x + 4;\n\n  // Position back button below the collage\n  //backButton.position.y = camera.position.y;\n  const collageY = 1.5;\n\n  backButton.position.y = camera.position.y - 2;\n  backButton.position.z = backbuttonPositionZ;\n\n  // Add items to the scene & container for switching views\n  scene.add(backButton);\n\n  //\n  backButton.marginLeft = 0;\n  backButton.marginTop = 0;\n\n  focusButtonHolder.push(backButton);\n\n  // Add event handlers\n  backButton.cursor = 'pointer';\n  backButton.on('click', function(ev) {\n    switchToGalleryViewFromFocus();\n  });\n\n  // Add the \"back\" text\n  new THREE.FontLoader().load(\n    //\"fonts/helvetiker_regular.typeface.json\",\n    \"fonts/Sternbach_Italic.json\",\n    (font) => {\n      //Geometry\n      let textGeometry = new THREE.TextBufferGeometry(\n        \"Back\",  // <-- Text to display - first name\n        {\n          font: font,\n          size: buttonTextSize - 0.10,\n          height: 0.005,\n          curveSegments: 6,\n        }\n      )\n\n      let sides = new THREE.MeshBasicMaterial({color: black, });\n      let materials = [\n        sides, sides, sides, sides, sides, sides,\n      ]\n\n      //const bbText = new THREE.Mesh(textGeometry, materials);\n      const backButton = new THREE.Mesh(textGeometry, materials);\n\n      var textPaddingTop = 0.1;\n      var textPaddingLeft = 0.2;\n\n      backButton.position.x = camera.position.x + 4 - 0.32;\n      backButton.position.y = camera.position.y - 0.1;\n      backButton.position.z = backbuttonTextPositionZ;\n\n      // Add text to scene & continaer\n      scene.add(backButton);\n\n      // Set custom attribute for button padding\n      backButton.marginLeft = -0.3;\n      backButton.marginTop = 0.1;\n\n      focusButtonHolder.push(backButton);\n\n      // Event handler\n      backButton.cursor = 'pointer';\n      backButton.on('click', function(ev) {\n        switchToGalleryViewFromFocus();\n      });\n    }\n  );\n}\n\nconst viewChangeDistance = 10;\n\nfunction switchToFocusView(card) {\n\n  // Transition gallery view off screen\n  for (const i in galleryHolder) {\n    \n    // Translate position of every item to the left\n    var targetPosition = new THREE.Vector3();\n\n    targetPosition.copy(galleryHolder[i].position);\n    targetPosition.x -= viewChangeDistance;\n\n    // Animate the transition\n    var fontPositionTween = new TWEEN.Tween(galleryHolder[i].position)\n      .to(targetPosition, 1000)\n      .easing(TWEEN.Easing.Quadratic.InOut)\n      .start();\n  }\n\n  // Create new object offscreen to the right\n\n  //\n  // Will need all the data for the card here\n  //\n\n\n  // Add card to the scene\n  const imgLoader = new THREE.TextureLoader();\n\n  const front = new THREE.MeshBasicMaterial({map: imgLoader.load(`${card.img_front}`), });\n  const back = new THREE.MeshBasicMaterial({map: imgLoader.load(`${card.img_back}`), });\n  const sides = new THREE.MeshBasicMaterial({color: 0x566573, });\n\n  // Mesh materials for card / back button\n  const focusCardMaterials = [\n    sides, sides, sides, sides, front, back,\n  ]\n\n  const focusCardShortSide = cardShortSide * 0.42;\n  const focusCardLongSide = cardLongSide * 0.42;\n\n  // Make accurate vertical/horizontal ratio\n  var focusCardGeometry = new THREE.BoxGeometry(focusCardShortSide, focusCardLongSide, cardThinkness);\n  if (card.sideways) {\n    focusCardGeometry = new THREE.BoxGeometry(focusCardLongSide, focusCardShortSide, cardThinkness);\n  }\n\n  // Create meshes\n  const focusCard = new THREE.Mesh(focusCardGeometry, focusCardMaterials);\n\n  // Position to the right of screen\n  //focusCard.position.x = backButton.position.x = camera.position.x + 5;\n  focusCard.position.x = camera.position.x + viewChangeDistance;\n\n  // Position back button below the card\n  focusCard.position.y = camera.position.y + 0.12;\n\n  focusCard.position.z = 4.5;\n\n  // Position the back button\n  for (const i in focusButtonHolder) {\n    focusButtonHolder[i].position.y = camera.position.y - 0.4; //- 1.4 - focusButtonHolder[i].marginTop;\n    focusButtonHolder[i].position.x = camera.position.x + viewChangeDistance;\n\n    if (focusButtonHolder[i].geometry.type == \"TextGeometry\") {\n      // modify x,y for the back button text\n      focusButtonHolder[i].position.y -= 0.01;\n      focusButtonHolder[i].position.x -= 0.16;\n    }\n  }\n\n  // Add items to the scene & container for focus view objects\n  scene.add(focusCard);\n  focusHolder.push(focusCard);\n\n  // Also push to card holder so that rotation works\n  cardHolder.push(focusCard)\n\n  // Remove handler for x rotation\n  document.removeEventListener('mousedown', onDocumentMouseDown, false);\n\n  // Add handler for x/y rotation\n  document.addEventListener('mousedown', onDocumentMouseDownXY, false);\n\n  // Translate position of every item to the left\n  var targetPosition = new THREE.Vector3();\n\n  targetPosition.copy(focusCard.position);\n  targetPosition.x -= viewChangeDistance;\n\n  // Animate the transitions\n  var focusCardTween = new TWEEN.Tween(focusCard.position)\n    .to(targetPosition, 1000)\n    .easing(TWEEN.Easing.Quadratic.InOut)\n    .start();\n\n  // Animate button transition\n  for (const i in focusButtonHolder) {\n    var buttonTargetPosition = new THREE.Vector3();\n\n    buttonTargetPosition.copy(focusButtonHolder[i].position);\n    buttonTargetPosition.x -= viewChangeDistance;\n\n    var focusCardTween = new TWEEN.Tween(focusButtonHolder[i].position)\n      .to(buttonTargetPosition, 1000)\n      .easing(TWEEN.Easing.Quadratic.InOut)\n      .start();\n  }\n\n\n  // Disable scrolling\n  disableScrolling();\n\n  // Add touch rotation controls\n  document.addEventListener('touchstart', onFocusTouchStart, false);\n\n}\n\n/*\n *\n */\nfunction switchToGalleryViewFromFocus() {\n  // Transition focus view off screen\n  const focusElements = focusHolder.concat(focusButtonHolder)\n  for (const i in focusElements) {\n    \n    // Translate position of every item to the left\n    var targetPosition = new THREE.Vector3();\n\n    targetPosition.copy(focusElements[i].position);\n    targetPosition.x += viewChangeDistance;\n\n    // Animate the transition\n    var fontPositionTween = new TWEEN.Tween(focusElements[i].position)\n      .to(targetPosition, 1000)\n      .easing(TWEEN.Easing.Quadratic.InOut)\n      .start();\n  }\n\n  // Reset focusHolder for next selection\n  focusHolder = [];\n\n  // Transition to gallery view\n  for (const i in galleryHolder) {\n    // Reset card rotation angle to face screen\n    if (galleryHolder[i].name.slice(0, 5) === 'card_') {\n      galleryHolder[i].rotation.set(Math.PI, Math.PI / 2, Math.PI, );\n    } ;\n    \n    // Translate position of every item to the right\n    var targetPosition = new THREE.Vector3();\n\n    targetPosition.copy(galleryHolder[i].position);\n    targetPosition.x += viewChangeDistance;\n\n    // Animate the transition\n    var fontPositionTween = new TWEEN.Tween(galleryHolder[i].position)\n      .to(targetPosition, 1000)\n      .easing(TWEEN.Easing.Quadratic.InOut)\n      .start();\n  }\n\n  // Remove handlers for x/y rotation\n  document.removeEventListener('mousedown', onDocumentMouseDownXY, false);\n  document.removeEventListener('touchstart', onFocusTouchStart, false);\n\n  // Add handlers for x rotation\n  document.addEventListener('mousedown', onDocumentMouseDown, false);\n\n  // Re-enable scrolling\n  enableScrolling();\n}\n\n\n/*\n * This function adds event handlers for scrolling\n */\nfunction enableScrolling() {\n  window.addEventListener('wheel', onMouseWheel, false );\n  window.addEventListener('scroll', onMouseWheel, false );\n\n  window.addEventListener('touchstart', touchScrollStart, false);\n  window.addEventListener('touchmove', touchScrollMove, false);\n  window.addEventListener('touchend', touchScrollEnd, false);\n}\n\n/*\n * This function removes event handlers for scrolling\n */\nfunction disableScrolling() {\n  window.removeEventListener( 'wheel', onMouseWheel, false );\n  window.removeEventListener( 'scroll', onMouseWheel, false );\n\n  window.removeEventListener('touchstart', touchScrollStart, false);\n  window.removeEventListener('touchmove', touchScrollMove, false);\n  window.removeEventListener('touchend', touchScrollEnd, false);\n}\n\n\nfunction touchScrollStart(event) {\n  touchScroll = event['touches'][0]['clientY'];\n  touchRotate = event['touches'][0]['clientX'];\n}\n\nfunction touchScrollMove(event) {\n  // Determine Y position difference between touches\n  let newScroll = event['touches'][0]['clientY'];\n  deltaY = touchScroll - newScroll;\n\n  // Scroll the camera, prevent scrolling beyond a min/max value\n  if ((deltaY < 0 && camera.position.y <= cameraMaxPositionY) || \n      (deltaY > 0 && camera.position.y >= cameraMinPositionY)) {\n    camera.position.y -= deltaY * 0.015;\n  }\n\n  // Update touch scroll position\n  touchScroll = newScroll;\n\n  let weight = 0.00025;\n\n  let newRotate = event['touches'][0]['clientX'];\n  deltaX = newRotate - touchRotate;\n\n  //mouseX = event.touches[0].screenX - windowHalfX;\n  targetRotationX = ( deltaX ) * weight;\n}\n\nfunction touchScrollEnd(event) {\n  // Smooth the end of the touch scroll\n  //let deltaY = 20;\n  //\n  //for (var i=5; i>0; i--){\n  //\n  //  let deltaY = i * 4;\n  //\n  //  let direction;\n  //\n  //  if (deltaY > 0) {\n  //    direction = 1;\n  //  } else if (deltaY < 0) {\n  //    direction = -1;\n  //  }\n  //\n  //  console.warn(`${i} -- ${deltaY} -- ${direction}`)\n  //\n  //  let newScroll = touchScroll - (i * direction);\n  //  let e = {\n  //    'touches': [\n  //      {'clientY': newScroll}\n  //    ]\n  //  };\n  //\n  //  touchScrollMove(e);\n  //\n  //}\n}\n\n\n\n\n/*\n  Return data structure design:\n  \n    {\n      \"Amanda Nunes\": {\n        \"cards\": {\n          250: {97: {\n                     \"card\": \"\"\n                     \"formatted_name\": \"amanda_nunes\"\n                     \"img_front\": \"\",\n                     \"img_back\": \"\",\n                     \"sideways\": true,\n                    }, \n               }\n        },\n        \"firstName\": \"Amanda\",\n        \"lastName\": \"Nunes\",\n        \"startingCardPositionY\": 2.6,\n        \"titleFirstNameY\": 2,\n        \"titleLastNameY\" : 1.2,\n        \"titleTextSize: 2.2\"\n      }\n    }\n*/\n\n/**\n * Parse the card data and arrange by series and serial numbers\n * so the data is sorted and ready for layout\n * */\nfunction parseCardData( rawData ) {\n  var sortedData = {};\n\n  // Iterate through unsorted data & categorize by fighter & series\n  for (var i = 0; i < rawData.length; i++) {\n    // Parse card name string\n    let cardName = cardData[i]['card'];\n    let cardParts = cardName.split(' - ');\n\n    let name = cardParts[2];\n    let serial = cardParts[3];\n    let serial_parts = serial.split('/')\n    let serial_number = serial_parts[0].substring(1)\n    let serial_total = serial_parts[1].substring(0, serial_parts[1].length - 1)\n\n    // Generate the image names\n    let fighter_img_name = name.toLowerCase().replace(/ /g,\"_\");\n    let imgBack = `joshah-moors/panini-nft-gallery/img/${fighter_img_name}_${serial_total}.png`;\n    let imgFront = `joshah-moors/panini-nft-gallery/img/${fighter_img_name}_${serial_number}_${serial_total}.png`;\n\n    // determine if this card is a /599 or /250 and should be displayed sideways\n    var sideways = false;\n    if (serial_total === '599' || serial_total === '250') {\n      sideways = true;\n    }\n\n    // Short circuit evaluation to check for key & set defaults\n    !(name in sortedData) && ((sortedData[name] = {}) && (sortedData[name]['cards'] = {}));\n    !(serial_total in sortedData[name]['cards']) && (sortedData[name]['cards'][serial_total] = {})\n\n    // Push the serial number to the collection and sort by integers\n    //sortedData[name]['cards'][serial_total].push(serial_number);\n    sortedData[name]['cards'][serial_total][serial_number] = {\n      \"card\": cardName,\n      \"formatted_name\": fighter_img_name,\n      \"img_back\": imgBack,\n      \"img_front\": imgFront,\n      \"sideways\": sideways,\n    }\n    //sortedData[name]['cards'][serial_total].sort(function(a, b) {\n    //  return a - b;\n    //});\n  }\n\n  // Set starting positions\n  var displayPositionY = startingPagePositionY;\n\n  // Make space for the title and nav button(s)\n\n  //\n  //   STILL NEED TO IMPLEMENT SPACING FOR MAIN TITLE\n  //\n\n  //const paddedFamilyY = ( familyButtonHeight + (2 * familyButtonPaddingY) )\n  //displayPositionY -= paddedFamilyY;\n  //\n  //familyButtonPositionY = startingPagePositionY - (paddedFamilyY / 2);\n\n  // Get keys (figher names) and sort them in display order\n  var keys = Object.keys(sortedData);\n  keys.sort();\n\n  // Iterate through the sorted data and calculate layout positions\n  for (var idx=0; idx<keys.length; idx++) {\n    \n    // Retain the key (fighter) name\n    let fighter = keys[idx];\n    //console.log('- - ' + fighter);\n\n    // Break fighter first/last names for display\n    sortedData[fighter]['firstName'] = fighter.substr(0, fighter.indexOf(' '));\n    sortedData[fighter]['lastName'] = fighter.substr(fighter.indexOf(' ') + 1);\n\n    // Set starting Y position for title first name\n    sortedData[fighter]['titleFirstNameY'] = displayPositionY;\n\n    // Add space & set starting Y position for title last name\n    displayPositionY -= titleRowHeightBetweenNames;\n    sortedData[fighter]['titleLastNameY'] = displayPositionY;\n\n    //console.log('- - - | starting Y position: ' + sortedData[fighter]['titleFirstNameY']);\n\n    // Add space to set starting position for cards\n    displayPositionY -= titleRowHeight;\n    sortedData[fighter]['startingCardPositionY'] = displayPositionY;\n\n    //console.log('- - - | starting Y card position ' + sortedData[fighter]['startingCardPositionY']);\n\n    // Caculate rows and Y distance to display cards\n    let rows = 1;\n    let rowPositionX = cardMinCoordinateX;\n\n    // Identify last series in collection to know stop point for new rows\n    let maxSeries = Math.max.apply(null,Object.keys(sortedData[fighter]['cards']));\n\n    for (const series in sortedData[fighter]['cards']) {\n      //\n\n      for (const serial in sortedData[fighter]['cards'][series]) {\n\n        // Check to see if the card is wide, add width for it\n        if (series === '599' || series === '250') {\n          rowPositionX += cardSpacingWideCardWidth;\n        } else {\n          rowPositionX += cardSpacingStandardWidth;\n        }\n\n        // Check to see if row width is over the limit - add rows\n        if (rowPositionX > cardMaxCoordinateX) {\n          // if this card is the last one displayed, do nothing\n          if ( (serial === (sortedData[fighter]['cards'][series].length - 1)) && (series === maxSeries) ) {\n              // pass\n          } else {\n            // More cards to display for fighter, add new row for them & reset X position\n            rows++;\n            rowPositionX = cardMinCoordinateX;\n          }\n        }\n      }\n    }\n\n    // Increment display position Y by number of rows to setup for next title\n    displayPositionY -= (cardRowHeight * rows);\n  }\n\n  console.warn(sortedData);\n\n  return sortedData;\n}\n\nfunction onMouseWheel(event) {\n\n    // prevent scrolling beyond a min/max value\n    if ((event.deltaY < 0 && camera.position.y <= cameraMaxPositionY) || \n        (event.deltaY > 0 && camera.position.y >= cameraMinPositionY)) {\n      camera.position.y -= event.deltaY * 0.005;\n    }\n    //camera.position.clampScalar( -5, 6 );   <---- This is an interesting one\n  }\n\n\nfunction onDocumentMouseDown(event) {\n\n  event.preventDefault();\n\n  document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n  document.addEventListener( 'mouseup', onDocumentMouseUp, false );\n  document.addEventListener( 'mouseout', onDocumentMouseOut, false );\n  //document.addEventListener( 'touchmove', onTouchMove, false );\n\n  mouseXOnMouseDown = event.clientX - windowHalfX;\n  targetRotationOnMouseDownX = targetRotationX;\n\n  //mouseYOnMouseDown = event.clientY - windowHalfY;\n  //targetRotationOnMouseDownY = targetRotationY;\n}\n\nfunction onDocumentMouseMove(event) {\n\n  console.log(event);\n\n  console.log(`Mouse client X: ${event.clientX}`)\n  console.log(`Window Half X: ${windowHalfX}`)\n  console.log(`Mouse client Y: ${event.clientY}`)\n  console.log(`Window Half Y: ${windowHalfY}`)\n\n  mouseX = event.clientX - windowHalfX;\n  targetRotationX = ( mouseX - mouseXOnMouseDown ) * 0.00025;\n\n  //mouseY = event.clientY - windowHalfY;\n  //targetRotationY = ( mouseY - mouseYOnMouseDown ) * 0.00025;\n\n\n  console.log(`mouseX: ${mouseX}`)\n  console.log(`mouseY: ${mouseY}`)\n\n  console.log(`targetRotationX: ${targetRotationX}`)\n  console.log(`targetRotationY: ${targetRotationY}`)\n\n  //console.log(`X: ${targetRotationX} -- Y: ${targetRotationY}`)\n}\n\nfunction onDocumentMouseUp(event) {\n\n  document.removeEventListener( 'mousemove', onDocumentMouseMove, false );\n  document.removeEventListener( 'mouseup', onDocumentMouseUp, false );\n  document.removeEventListener( 'mouseout', onDocumentMouseOut, false );\n}\n\nfunction onDocumentMouseOut(event) {\n\n  document.removeEventListener( 'mousemove', onDocumentMouseMove, false );\n  document.removeEventListener( 'mouseup', onDocumentMouseUp, false );\n  document.removeEventListener( 'mouseout', onDocumentMouseOut, false );\n}\n\n\n\nfunction onDocumentMouseDownXY(event) {\n  event.preventDefault();\n\n  document.addEventListener( 'mousemove', onDocumentMouseMoveXY, false );\n  document.addEventListener( 'mouseup', onDocumentMouseUpXY, false );\n  document.addEventListener( 'mouseout', onDocumentMouseOutXY, false );\n  //document.addEventListener( 'touchmove', onTouchMove, false );\n\n  mouseXOnMouseDown = event.clientX - windowHalfX;\n  targetRotationOnMouseDownX = targetRotationX;\n\n  mouseYOnMouseDown = event.clientY - windowHalfY;\n  targetRotationOnMouseDownY = targetRotationY;\n\n}\n\nfunction onDocumentMouseMoveXY(event) {\n  mouseX = event.clientX - windowHalfX;\n  targetRotationX = ( mouseX - mouseXOnMouseDown ) * 0.00025;\n\n  mouseY = event.clientY - windowHalfY;\n  targetRotationY = ( mouseY - mouseYOnMouseDown ) * 0.00025;\n}\n\nfunction onDocumentMouseUpXY(event) {\n\n  document.removeEventListener( 'mousemove', onDocumentMouseMoveXY, false );\n  document.removeEventListener( 'mouseup', onDocumentMouseUpXY, false );\n  document.removeEventListener( 'mouseout', onDocumentMouseOutXY, false );\n}\n\nfunction onDocumentMouseOutXY(event) {\n\n  document.removeEventListener( 'mousemove', onDocumentMouseMoveXY, false );\n  document.removeEventListener( 'mouseup', onDocumentMouseUpXY, false );\n  document.removeEventListener( 'mouseout', onDocumentMouseOutXY, false );\n}\n\n/**\n * \n * Set of functions for touch API\n * \n **/\nfunction onFocusTouchStart(event) {\n\n  event.preventDefault();\n\n  document.addEventListener('touchmove', onFocusTouchMoveRotateCard, false);\n  document.addEventListener( 'touchend', onFocusTouchEnd, false );\n  document.addEventListener( 'touchcancel', onFocusTouchCancel, false );\n\n  mouseXOnMouseDown = event.touches[0].screenX - windowHalfX;\n  targetRotationOnMouseDownX = targetRotationX;\n\n  mouseYOnMouseDown = event.touches[0].screenY - windowHalfY;\n  targetRotationOnMouseDownY = targetRotationY;\n\n  //console.warn(` mouseXOnMouseDown: ${mouseXOnMouseDown}`)\n  //console.warn(` mouseYOnMouseDown: ${mouseYOnMouseDown}`)\n  \n}\n\n//function onDocumentTouchMoveScroll(event) {\n//\n//  console.log(event);\n//\n//  // prevent scrolling beyond a min/max value\n//    if ((event.touches[0].clientY < 0 && camera.position.y <= cameraMaxPositionY) || \n//        (event.touches[0].clientY > 0 && camera.position.y >= cameraMinPositionY)) {\n//      camera.position.y -= event.touches[0].clientY * 0.0005;\n//    }\n\n  //console.log(`Touch client X: ${event.touches[0].clientX}`)\n  //console.log(`Window Half X: ${windowHalfX}`)\n  //console.log(`Touch client Y: ${event.touches[0].clientY}`)\n  //console.log(`Window Half Y: ${windowHalfY}`)\n//\n  //var weight = 0.00025;\n  ////var weight = 1;\n//\n  //mouseX = event.touches[0].screenX - windowHalfX;\n  //targetRotationX = ( mouseX - mouseXOnMouseDown ) * weight;\n//\n  //mouseY = event.touches[0].screenY - windowHalfY;\n  //targetRotationY = ( mouseY - mouseYOnMouseDown ) * weight;\n//\n  //console.log(`mouseX: ${mouseX}`)\n  //console.log(`mouseY: ${mouseY}`)\n//\n  //console.log(`targetRotationX: ${targetRotationX}`)\n  //console.log(`targetRotationY: ${targetRotationY}`)\n//}\n\n\nfunction onFocusTouchMoveRotateCard(event) {\n\n  console.log(event);\n\n  console.log(`Touch client X: ${event.touches[0].clientX}`)\n  console.log(`Window Half X: ${windowHalfX}`)\n  console.log(`Touch client Y: ${event.touches[0].clientY}`)\n  console.log(`Window Half Y: ${windowHalfY}`)\n\n  var weight = 0.00025;\n  //var weight = 1;\n\n  mouseX = event.touches[0].screenX - windowHalfX;\n  targetRotationX = ( mouseX - mouseXOnMouseDown ) * weight;\n\n  mouseY = event.touches[0].screenY - windowHalfY;\n  targetRotationY = ( mouseY - mouseYOnMouseDown ) * weight;\n\n  console.log(`mouseX: ${mouseX}`)\n  console.log(`mouseY: ${mouseY}`)\n\n  console.log(`targetRotationX: ${targetRotationX}`)\n  console.log(`targetRotationY: ${targetRotationY}`)\n}\n\nfunction onFocusTouchEnd(event) {\n\n  document.removeEventListener('touchmove', onFocusTouchMoveRotateCard, false);\n  document.removeEventListener('touchend', onFocusTouchEnd, false);\n  document.removeEventListener('touchcancel', onFocusTouchCancel, false);\n}\n\nfunction onFocusTouchCancel(event) {\n\n  document.removeEventListener('touchmove', onFocusTouchMoveRotateCard, false);\n  document.removeEventListener('touchend', onFocusTouchEnd, false);\n  document.removeEventListener('touchcancel', onFocusTouchCancel, false);\n}\n\n\n\n\nfunction animate(time) {\n\n  requestAnimationFrame( animate );\n\n  // Animate transitions\n  TWEEN.update(time);\n\n  render();\n  //stats.update();\n  animateStars(stars);\n}\n\nfunction render() {\n\n  for (var i = 0; i < cardHolder.length; i++) {\n    rotateAroundWorldAxis(cardHolder[i], new THREE.Vector3(0, 1, 0), targetRotationX);\n    rotateAroundWorldAxis(cardHolder[i], new THREE.Vector3(1, 0, 0), targetRotationY);\n  }\n\n  //rotateAroundWorldAxis(card, new THREE.Vector3(0, 1, 0), targetRotationX);\n  //rotateAroundWorldAxis(card, new THREE.Vector3(1, 0, 0), targetRotationY);\n  \n  targetRotationY = targetRotationY * (1 - slowingFactor);\n  targetRotationX = targetRotationX * (1 - slowingFactor);\n  renderer.render( scene, camera );\n}\n\nfunction rotateAroundObjectAxis(object, axis, radians) {\n\n  var rotationMatrix = new THREE.Matrix4();\n\n  rotationMatrix.makeRotationAxis(axis.normalize(), radians);\n  object.matrix.multiply(rotationMatrix);\n  object.rotation.setFromRotationMatrix( object.matrix );\n}\n\nfunction rotateAroundWorldAxis( object, axis, radians ) {\n\n  if ( radians !== 0 ) {\n\n    var rotationMatrix = new THREE.Matrix4();\n\n    rotationMatrix.makeRotationAxis( axis.normalize(), radians );\n    rotationMatrix.multiply( object.matrix );                       // pre-multiply\n    object.matrix = rotationMatrix;\n    object.rotation.setFromRotationMatrix( object.matrix );\n  }\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <script src=\"src/index.js\"></script>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}